{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nazar\\\\Desktop\\\\pomodoro-timer\\\\src\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PlayButton from './Button';\nimport PauseButton from './PauseButton';\nimport SettingsButton from './SettingsButton';\nimport { useContext, useState, useEffect } from 'react';\nimport SettingsContext from './SettingsContext';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst red = `#f54e4e`;\nconst green = `#4aec8c`;\n\nfunction Timer() {\n  _s();\n\n  const settingsInfo = useContext(SettingsContext);\n  const [isPaused, setIsPaused] = useState(true);\n  const [mode, setMode] = useState('work'); //work/null/break\n\n  const [secondsLeft, setSecondsLeft] = useState(0);\n\n  function switchMode() {\n    const nextMode = mode === 'work' ? 'break' : 'work';\n  }\n\n  function initTimer() {\n    setSecondsLeft(settingsInfo.workMinutes * 60);\n  }\n\n  useEffect(() => {\n    initTimer();\n    setInterval(() => {\n      if (isPaused) {\n        return;\n      }\n\n      if (secondsLeft === 0) {\n        switchMode();\n      }\n    }, 1000);\n  }, [settingsInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: 60,\n      text: `60%`,\n      styles: buildStyles({\n        textColor: '#fff',\n        pathColor: red,\n        trailColor: 'rgba(255, 255, 255, .2)'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: isPaused ? /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(SettingsButton, {\n        onClick: () => settingsInfo.setShowSettings(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"hzqG++R5p4McsCPQOGgBBAUbX34=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["CircularProgressbar","buildStyles","PlayButton","PauseButton","SettingsButton","useContext","useState","useEffect","SettingsContext","App","red","green","Timer","settingsInfo","isPaused","setIsPaused","mode","setMode","secondsLeft","setSecondsLeft","switchMode","nextMode","initTimer","workMinutes","setInterval","textColor","pathColor","trailColor","marginTop","setShowSettings"],"sources":["C:/Users/Nazar/Desktop/pomodoro-timer/src/Timer.js"],"sourcesContent":["import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport PlayButton from './Button';\r\nimport PauseButton from './PauseButton';\r\nimport SettingsButton from './SettingsButton';\r\nimport {useContext, useState, useEffect} from 'react';\r\nimport SettingsContext from './SettingsContext';\r\nimport App from './App';\r\n\r\n\r\nconst red = `#f54e4e`;\r\nconst green = `#4aec8c`;\r\n\r\nfunction Timer() {\r\n    const settingsInfo = useContext(SettingsContext);\r\n\r\n    const [isPaused, setIsPaused] = useState(true);\r\n    const [mode, setMode] = useState('work'); //work/null/break\r\n    const [secondsLeft, setSecondsLeft] = useState(0);\r\n\r\n    function switchMode() {\r\n        const nextMode = mode === 'work' ? 'break' : 'work';\r\n    }\r\n\r\n    function initTimer() {\r\n        setSecondsLeft(settingsInfo.workMinutes * 60);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initTimer();\r\n\r\n        setInterval(() => {\r\n            if (isPaused) {\r\nreturn;\r\n            }\r\n            if (secondsLeft === 0) {\r\nswitchMode();\r\n            }\r\n        }, 1000)\r\n\r\n    }, [settingsInfo]);\r\n\r\n \r\n\r\n    return(\r\n        <div>\r\n        <CircularProgressbar value={60} text={`60%`} styles={buildStyles({ \r\n            textColor: '#fff',\r\n            pathColor: red,\r\n            trailColor: 'rgba(255, 255, 255, .2)',\r\n        })} />\r\n        <div style={{marginTop: '20px'}}>\r\n            {isPaused ? <PlayButton /> : <PauseButton />}\r\n        </div>\r\n        <div style={{marginTop: '20px'}}>\r\n            <SettingsButton onClick={() => settingsInfo.setShowSettings(true)} />\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;"],"mappings":";;;AAAA,SAASA,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;AACA,OAAO,4CAAP;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGA,MAAMC,GAAG,GAAI,SAAb;AACA,MAAMC,KAAK,GAAI,SAAf;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACb,MAAMC,YAAY,GAAGR,UAAU,CAACG,eAAD,CAA/B;EAEA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,MAAD,CAAhC,CAJa,CAI6B;;EAC1C,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;;EAEA,SAASc,UAAT,GAAsB;IAClB,MAAMC,QAAQ,GAAGL,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAA7C;EACH;;EAED,SAASM,SAAT,GAAqB;IACjBH,cAAc,CAACN,YAAY,CAACU,WAAb,GAA2B,EAA5B,CAAd;EACH;;EAEDhB,SAAS,CAAC,MAAM;IACZe,SAAS;IAETE,WAAW,CAAC,MAAM;MACd,IAAIV,QAAJ,EAAc;QAC1B;MACa;;MACD,IAAII,WAAW,KAAK,CAApB,EAAuB;QACnCE,UAAU;MACG;IACJ,CAPU,EAOR,IAPQ,CAAX;EASH,CAZQ,EAYN,CAACP,YAAD,CAZM,CAAT;EAgBA,oBACI;IAAA,wBACA,QAAC,mBAAD;MAAqB,KAAK,EAAE,EAA5B;MAAgC,IAAI,EAAG,KAAvC;MAA6C,MAAM,EAAEZ,WAAW,CAAC;QAC7DwB,SAAS,EAAE,MADkD;QAE7DC,SAAS,EAAEhB,GAFkD;QAG7DiB,UAAU,EAAE;MAHiD,CAAD;IAAhE;MAAA;MAAA;MAAA;IAAA,QADA,eAMA;MAAK,KAAK,EAAE;QAACC,SAAS,EAAE;MAAZ,CAAZ;MAAA,UACKd,QAAQ,gBAAG,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAAH,gBAAoB,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA;IADjC;MAAA;MAAA;MAAA;IAAA,QANA,eASA;MAAK,KAAK,EAAE;QAACc,SAAS,EAAE;MAAZ,CAAZ;MAAA,uBACI,QAAC,cAAD;QAAgB,OAAO,EAAE,MAAMf,YAAY,CAACgB,eAAb,CAA6B,IAA7B;MAA/B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QATA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GA9CQjB,K;;KAAAA,K;AAgDT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}